
package portainer;

/**
 * Provides the necessary values to build a docker image
 *   image : The definition of the image to be built
 *   context: Path to the build context tar file (relative to the task sandbox)
 */
message BuildTask {
    optional string task_id = 8; // This is optional for backwards compat.
    required DockerImage image = 1;
    optional DockerDaemon daemon = 7;

    // Note: I'd rather have put this within a nested structure (maybe a DockerContext)
    // message but this makes for easier backwards compat.
    optional string context = 2; // Filename of the custom build context
    optional string context_url = 9; // Fully qualified URL to download the context

    optional string dockerfile = 6; // Optional string representation of the Dockerfile to build
    optional bool stream = 5; // Should we stream the build output?
}

/**
 * Representation of a docker image
 */
message DockerImage {
  optional DockerRegistry registry = 2;
  required string repository = 1;
  repeated string tag = 3;
}

/**
 * Configuration for a docker registry
 */
message DockerRegistry {
  required string hostname = 1;
  optional uint32 port = 2 [default = 80];
}

/**
 * Configuration for the docker daemon
 */
message DockerDaemon {
  // These are used when launching/connecting to the docker daemon
  optional string docker_host = 1;
  optional string docker_args = 2;

  // List of docker registries that can be used without SSL
  repeated string insecure_registries = 3;
}
